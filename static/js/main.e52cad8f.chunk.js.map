{"version":3,"sources":["components/Tabbar/tabbarNoContent.jsx","App.js","serviceWorker.js","index.js","components/Loading/index.js","routes/index.js"],"names":["pathMap","Map","set","tabBarList","title","path","get","seed","icon","selectedIcon","Tabbar","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","selectedPath","history","location","pathname","hidden","fullScreen","_createClass","key","value","url","uri","React","createElement","style","width","height","background","concat","result","item","_this2","_TabBar","Item","this","iconComponent","selected","badge","handleBadge","onPress","setState","replace","data-seed","_this3","className","unselectedTintColor","tintColor","barTintColor","noRenderContent","map","tabBar","index","tabbarComponent","Component","withRouter","App","apply","arguments","Router","Switch","routes","renderedRoutesList","renderRoutes","parentPath","Array","isArray","forEach","route","redirect","children","component","push","Redirect","exact","from","to","Route","length","getRouterByRoutes","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","Loading","basename","process","log","Home","Loadable","loader","loading","Discovery","Order","Mine","NotFound","createBrowserHistory","listen","action","search","hash"],"mappings":"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","file":"static/js/main.e52cad8f.chunk.js","sourcesContent":["import React from 'react'\nimport { TabBar } from 'antd-mobile'\nimport { withRouter } from 'react-router-dom'\nimport './tabbarNoContent.scss'\n\nconst pathMap = new Map()\npathMap.set('home', `/home`)\npathMap.set('discovery', '/discovery')\npathMap.set('order', '/order')\npathMap.set('mine', '/mine')\n\n// 首页的tabbar不超过4个还是直接用html组件方便，\n// 如果需要每个特殊处理，new dot，数据渲染要做更多判断，操作更多\nconst tabBarList = [\n  {\n    title: '美团',\n    path: pathMap.get('home'),\n    seed: 'logId',\n    icon: 'https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg',\n    selectedIcon:\n      'https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg',\n  },\n  {\n    title: '发现',\n    path: pathMap.get('discovery'),\n    seed: 'logId1',\n    icon: 'https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg',\n    selectedIcon:\n      'https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg',\n  },\n  {\n    title: '订单',\n    path: pathMap.get('order'),\n    icon: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg',\n    selectedIcon:\n      'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg',\n  },\n  {\n    title: '我的',\n    path: pathMap.get('mine'),\n    icon: 'https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg',\n    selectedIcon:\n      'https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg',\n  },\n]\n\nclass Tabbar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedPath: props.history.location.pathname || pathMap.get('home'),\n      hidden: false,\n      fullScreen: false,\n    }\n  }\n\n  iconComponent(url, path) {\n    if (path === pathMap.get('mine')) {\n      return { uri: url }\n    }\n    return (\n      <div\n        style={{\n          width: '22px',\n          height: '22px',\n          background: `url(${url}) center center /  21px 21px no-repeat`,\n        }}\n      />\n    )\n  }\n  handleBadge(path) {\n    let result = null\n    switch (path) {\n      case pathMap.get('discovery'):\n        result = 'new'\n        break\n      case pathMap.get('order'):\n        result = 1\n        break\n      case pathMap.get('mine'):\n        break\n      default:\n        break\n    }\n    return result\n  }\n  tabbarComponent(item) {\n    return (\n      <TabBar.Item\n        title={item.title}\n        key={item.path}\n        icon={this.iconComponent(item.icon, item.path)}\n        selectedIcon={this.iconComponent(item.selectedIcon, item.path)}\n        selected={this.state.selectedPath === item.path}\n        badge={this.handleBadge(item.path)}\n        onPress={() => {\n          this.setState({\n            selectedPath: item.path,\n          })\n          this.props.history.replace(item.path)\n        }}\n        data-seed={item.seed}\n      >\n        {item.path}\n      </TabBar.Item>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"tabbar-wrapper\">\n        <TabBar\n          unselectedTintColor=\"#949494\"\n          tintColor=\"#33A3F4\"\n          barTintColor=\"white\"\n          noRenderContent={true}\n          hidden={this.state.hidden}\n        >\n          {tabBarList.map((tabBar, index) => {\n            return this.tabbarComponent(tabBar)\n          })}\n        </TabBar>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Tabbar)\n","/* eslint-disable */\nimport {history,routes} from '@/routes'\nimport React from 'react'\nimport {Redirect,Route,Router,Switch} from 'react-router-dom'\n\nimport './App.scss'\nimport Tabbar from './components/Tabbar/tabbarNoContent'\nimport './scss/common.scss'\nimport './scss/reset.scss'\n\nfunction getRouterByRoutes(routes) {\n  const renderedRoutesList = []\n  const renderRoutes = (routes, parentPath) => {\n    Array.isArray(routes) &&\n      routes.forEach((route) => {\n        const { path, redirect, children, component } = route\n        if (redirect) {\n          renderedRoutesList.push(\n            <Redirect\n              key={`${parentPath}${path}`}\n              exact\n              from={path}\n              to={`${parentPath}${redirect}`}\n            />\n          )\n        }\n        if (component) {\n          renderedRoutesList.push(\n            <Route\n              key={`${parentPath}${path}`}\n              exact\n              path={`${parentPath}${path}`}\n              component={component}\n            />\n          )\n        }\n        if (Array.isArray(children) && children.length > 0) {\n          renderRoutes(children, path)\n        }\n      })\n  }\n  renderRoutes(routes, '')\n  return renderedRoutesList\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      // <BrowserRouter basename={basename}></BrowserRouter>\n      <Router history={history}>\n        <Switch>{getRouterByRoutes(routes)}</Switch>\n        {/* <CustomeBar></CustomeBar> */}\n        <Tabbar />\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/common.scss';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\n\nexport default function Loading() {\n  return (\n    <div className=\"comp-loading\">\n      <div className=\"item-1\"></div>\n      <div className=\"item-2\"></div>\n      <div className=\"item-3\"></div>\n      <div className=\"item-4\"></div>\n      <div className=\"item-5\"></div>\n    </div>\n  )\n}\n","import Loadable from 'react-loadable'\nimport { createBrowserHistory } from 'history'\nimport Loading from '@/components/Loading'\n\nexport const isDev = process.env.NODE_ENV === 'development'\n\nexport let basename = process.env.PUBLIC_URL\nconsole.log(`🚀 ~ file: index.js:6 ~ basename:`, basename)\n\nexport const Home = Loadable({\n  loader: () => import('@/pages/Home'),\n  loading: Loading,\n})\nexport const Discovery = Loadable({\n  loader: () => import('@/pages/Discovery'),\n  loading: Loading,\n})\nexport const Order = Loadable({\n  loader: () => import('@/pages/Order'),\n  loading: Loading,\n})\nexport const Mine = Loadable({\n  loader: () => import('@/pages/Mine'),\n  loading: Loading,\n})\nexport const NotFound = Loadable({\n  loader: () => import('@/components/NotFound'),\n  loading: Loading,\n})\n\nexport const history = createBrowserHistory({\n  basename,\n})\nconsole.log(history)\nhistory.listen((location, action) => {\n  console.log(\n    `The current URL is ${location.pathname}${location.search}${location.hash}`\n  )\n  console.log(`The last navigation action was ${action}`)\n})\n\nexport const routes = [\n  {\n    path: '/',\n    redirect: '/home',\n  },\n  {\n    path: '/home',\n    component: Home,\n  },\n  {\n    path: '/discovery',\n    component: Discovery,\n  },\n  {\n    path: '/order',\n    component: Order,\n  },\n  {\n    path: '/mine',\n    component: Mine,\n  },\n  {\n    path: '*',\n    component: NotFound,\n  },\n]\n"],"sourceRoot":""}